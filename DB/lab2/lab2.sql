/*
    1.Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
    Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
    Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.УЧГОД.
    Фильтры (AND):
    a) Н_ЛЮДИ.ОТЧЕСТВО > Сергеевич.
    b) Н_СЕССИЯ.ЧЛВК_ИД > 151200.
    c) Н_СЕССИЯ.ЧЛВК_ИД > 100622.
    Вид соединения: RIGHT JOIN.
*/

/*
Максимальный ид = 151200, поэтому ничего не выводит. Вот код для проверки:

SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.УЧГОД, Н_СЕССИЯ.ЧЛВК_ИД 
FROM Н_СЕССИЯ
INNER JOIN Н_ЛЮДИ ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
ORDER BY Н_СЕССИЯ.ЧЛВК_ИД DESC;
*/

SELECT DISTINCT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.УЧГОД
FROM Н_СЕССИЯ
RIGHT JOIN Н_ЛЮДИ ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_ЛЮДИ.ОТЧЕСТВО > 'Сергеевич' AND Н_СЕССИЯ.ЧЛВК_ИД > 151200 AND Н_СЕССИЯ.ЧЛВК_ИД > 100622;


/*
    2.Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
    Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
    Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ИД.
    Фильтры (AND):
    a) Н_ЛЮДИ.ФАМИЛИЯ > Соколов.
    b) Н_ВЕДОМОСТИ.ЧЛВК_ИД > 153285.
    Вид соединения: INNER JOIN.
*/

/*
ничего не выводит, так как максимальный ид 134262. вот код для проверки:

SELECT Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
INNER JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
ORDER BY Н_ВЕДОМОСТИ.ЧЛВК_ИД DESC;
*/

SELECT DISTINCT Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ИД
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
INNER JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ФАМИЛИЯ > 'Соколов' AND Н_ВЕДОМОСТИ.ЧЛВК_ИД > 153285;

/*
    3.Вывести число студентов ФКТИУ, которые не имеет отчества.
    Ответ должен содержать только одно число.
*/

SELECT COUNT(*)
FROM Н_УЧЕНИКИ
RIGHT JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND Н_ЛЮДИ.ОТЧЕСТВО = '.'; -- Н_ЛЮДИ.ОТЧЕСТВО = NULL

/*
    4.Выдать различные отчества людей и число людей с каждой из этих отчеств,
    ограничив список отчествами, встречающимися более 10 раз на ФКТИУ.
    Для реализации использовать подзапрос.
*/
/*
работающий код но без подзапроса

SELECT Н_ЛЮДИ.ОТЧЕСТВО, COUNT(Н_ЛЮДИ.ИД) AS ЧИСЛО_ЛЮДЕЙ
FROM Н_ЛЮДИ
JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
GROUP BY Н_ЛЮДИ.ОТЧЕСТВО
HAVING COUNT(Н_ЛЮДИ.ОТЧЕСТВО) > 10;
*/

SELECT ОТЧЕСТВО, COUNT(ОТЧЕСТВО) AS ЧИСЛО_ЛЮДЕЙ
FROM (
    SELECT Н_ЛЮДИ.ОТЧЕСТВО
    FROM Н_ЛЮДИ
    JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
    JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
    WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
) AS ПОДЗАПРОС
GROUP BY ОТЧЕСТВО
HAVING COUNT(ОТЧЕСТВО) > 10;




/*
    5.Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст),
    где средний возраст меньше минимального возраста в группе 1100.
*/

-- SELECT MAX(EXTRACT (YEARS FROM ДАТА_РОЖДЕНИЯ)) FROM Н_ЛЮДИ; выдаст 2069...
--учитывать дату смерти
--у даты смерти на null проверка не требуется, так как нет строчек с null значением (проверил)
-- в ответе нет строчек, так как минимальный возраст отрицательный. Из за того, что есть люди, которые родили позже существующего года

--поиск минимального возраста в группе 1100
SELECT MIN(CASE
            WHEN Н_ЛЮДИ.ДАТА_СМЕРТИ != '9999-09-09' THEN (EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_СМЕРТИ) -  EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))
            ELSE (EXTRACT (YEAR FROM CURRENT_DATE) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))
        END 
        )
FROM Н_ЛЮДИ
JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '1100';

--поиск среднего возраста людей
SELECT AVG(ВОЗРАСТ_ЛЮДЕЙ) AS Средний_возраст_всех_людей
FROM(
    SELECT (CASE 
                WHEN Н_ЛЮДИ.ДАТА_СМЕРТИ != '9999-09-09' THEN (EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_СМЕРТИ) -  EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))
                ELSE (EXTRACT (YEAR FROM CURRENT_DATE) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))
            END 
            ) AS ВОЗРАСТ_ЛЮДЕЙ
    FROM Н_ЛЮДИ
) AS SUBQUERY
;

--поиск среднего возраста людей в группах
SELECT Н_УЧЕНИКИ.ГРУППА, AVG(
    CASE 
        WHEN Н_ЛЮДИ.ДАТА_СМЕРТИ != '9999-09-09' 
            THEN EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_СМЕРТИ) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
        ELSE EXTRACT (YEAR FROM CURRENT_DATE) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
    END) AS ВОЗРАСТ_ЛЮДЕЙ
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
GROUP BY Н_УЧЕНИКИ.ГРУППА;


--решение с включением двух предыдущих запросов
SELECT Н_УЧЕНИКИ.ГРУППА, AVG(
    CASE 
        WHEN Н_ЛЮДИ.ДАТА_СМЕРТИ != '9999-09-09' 
            THEN EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_СМЕРТИ) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
        ELSE EXTRACT (YEAR FROM CURRENT_DATE) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
    END 
) AS Средний_возраст
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
GROUP BY Н_УЧЕНИКИ.ГРУППА
HAVING AVG(
    CASE 
        WHEN Н_ЛЮДИ.ДАТА_СМЕРТИ != '9999-09-09' 
            THEN EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_СМЕРТИ) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
        ELSE EXTRACT (YEAR FROM CURRENT_DATE) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
    END
) <
(
    SELECT MIN(
        CASE
            WHEN Н_ЛЮДИ.ДАТА_СМЕРТИ != '9999-09-09' 
                THEN EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_СМЕРТИ) -  EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
            ELSE EXTRACT (YEAR FROM CURRENT_DATE) - EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
        END 
    )
    FROM Н_ЛЮДИ
    JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    WHERE Н_УЧЕНИКИ.ГРУППА = '1100'
)
;




-- SELECT MIN(EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) AS ВОЗРАСТ
-- FROM Н_ЛЮДИ
-- JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
-- WHERE Н_УЧЕНИКИ.ГРУППА = '1100';

/*
    6.Получить список студентов, отчисленных после первого сентября 2012 года с заочной формы обучения. В результат включить:
    номер группы;
    номер, фамилию, имя и отчество студента;
    номер пункта приказа;
    Для реализации использовать подзапрос с IN.
*/
--если их отчислили после первого сентября 2012, то разница между началом и концом будет <4
SELECT Н_УЧЕНИКИ.ГРУППА, CONCAT(Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО) AS ФИО, Н_УЧЕНИКИ.В_СВЯЗИ_С AS НОМЕР_ПУНКТА_ПРИКАЗА 
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ  IN ('Заочная')
    AND EXTRACT(YEAR FROM Н_УЧЕНИКИ.НАЧАЛО) - EXTRACT(YEAR FROM Н_УЧЕНИКИ.КОНЕЦ) < 4
    AND Н_УЧЕНИКИ.КОНЕЦ > '2012-09-01'
;
/*    
    7.Вывести список студентов, имеющих одинаковые фамилии, но не совпадающие даты рождения.   
*/
--написать без дистинкта
SELECT CONCAT(Л1.ФАМИЛИЯ, ' ', Л1.ИМЯ, ' ', Л1.ОТЧЕСТВО) AS ФИО1, Л1.ДАТА_РОЖДЕНИЯ, CONCAT(Л2.ФАМИЛИЯ, ' ', Л2.ИМЯ, ' ', Л2.ОТЧЕСТВО) AS ФИО2, Л2.ДАТА_РОЖДЕНИЯ
FROM Н_ЛЮДИ AS Л1
JOIN Н_ЛЮДИ AS Л2 ON Л1.ФАМИЛИЯ = Л2.ФАМИЛИЯ
WHERE Л1.ФАМИЛИЯ = Л2.ФАМИЛИЯ AND Л1.ДАТА_РОЖДЕНИЯ <> Л2.ДАТА_РОЖДЕНИЯ AND Л1.ИД <> Л2.ИД
GROUP BY Л1.ФАМИЛИЯ, Л1.ИМЯ, Л1.ОТЧЕСТВО, Л1.ДАТА_РОЖДЕНИЯ, Л2.ФАМИЛИЯ, Л2.ИМЯ, Л2.ОТЧЕСТВО, Л2.ДАТА_РОЖДЕНИЯ;

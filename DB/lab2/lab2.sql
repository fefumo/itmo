/*
    1.Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
    Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
    Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.УЧГОД.
    Фильтры (AND):
    a) Н_ЛЮДИ.ОТЧЕСТВО > Сергеевич.
    b) Н_СЕССИЯ.ЧЛВК_ИД > 151200.
    c) Н_СЕССИЯ.ЧЛВК_ИД > 100622.
    Вид соединения: RIGHT JOIN.
*/

/*
Максимальный ид = 151200, поэтому ничего не выводит. Вот код для проверки:

SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.УЧГОД, Н_СЕССИЯ.ЧЛВК_ИД 
FROM Н_СЕССИЯ
INNER JOIN Н_ЛЮДИ ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
ORDER BY Н_СЕССИЯ.ЧЛВК_ИД DESC;
*/

SELECT DISTINCT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.УЧГОД
FROM Н_СЕССИЯ
RIGHT JOIN Н_ЛЮДИ ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_ЛЮДИ.ОТЧЕСТВО > 'Сергеевич' AND Н_СЕССИЯ.ЧЛВК_ИД > 151200 AND Н_СЕССИЯ.ЧЛВК_ИД > 100622;


/*
    2.Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
    Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
    Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ИД.
    Фильтры (AND):
    a) Н_ЛЮДИ.ФАМИЛИЯ > Соколов.
    b) Н_ВЕДОМОСТИ.ЧЛВК_ИД > 153285.
    Вид соединения: INNER JOIN.
*/

/*
ничего не выводит, так как максимальный ид 134262. вот код для проверки:

SELECT Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
INNER JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
ORDER BY Н_ВЕДОМОСТИ.ЧЛВК_ИД DESC;
*/

SELECT DISTINCT Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ИД
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
INNER JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ФАМИЛИЯ > 'Соколов';

/*
    3.Вывести число студентов ФКТИУ, которые не имеет отчества.
    Ответ должен содержать только одно число.
*/

SELECT COUNT(*)
FROM Н_УЧЕНИКИ
RIGHT JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND Н_ЛЮДИ.ОТЧЕСТВО = '.'; -- Н_ЛЮДИ.ОТЧЕСТВО = NULL

/*
    4.Выдать различные отчества людей и число людей с каждой из этих отчеств,
    ограничив список отчествами, встречающимися более 10 раз на ФКТИУ.
    Для реализации использовать подзапрос.
*/
/*
работающий код но без подзапроса

SELECT Н_ЛЮДИ.ОТЧЕСТВО, COUNT(Н_ЛЮДИ.ИД) AS ЧИСЛО_ЛЮДЕЙ
FROM Н_ЛЮДИ
JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
GROUP BY Н_ЛЮДИ.ОТЧЕСТВО
HAVING COUNT(Н_ЛЮДИ.ОТЧЕСТВО) > 10;
*/

SELECT Subquery.ОТЧЕСТВО, COUNT(Н_ЛЮДИ.ИД) AS ЧИСЛО_ЛЮДЕЙ
FROM (
    SELECT Н_ЛЮДИ.ОТЧЕСТВО
    FROM Н_ЛЮДИ
    JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
    JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
    WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
    GROUP BY Н_ЛЮДИ.ОТЧЕСТВО
    HAVING COUNT(DISTINCT Н_ЛЮДИ.ИД) > 10 -- без distinct не работает.
) AS Subquery
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ОТЧЕСТВО = Subquery.ОТЧЕСТВО
GROUP BY Subquery.ОТЧЕСТВО;




/*
    5.Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст),
    где средний возраст меньше минимального возраста в группе 1100.
*/

-- SELECT MAX(EXTRACT (YEARS FROM ДАТА_РОЖДЕНИЯ)) FROM Н_ЛЮДИ; выдаст 2069...
SELECT DISTINCT Н_УЧЕНИКИ.ГРУППА, AVG(EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) AS СРЕДНИЙ_ВОЗРАСТ
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
GROUP BY Н_УЧЕНИКИ.ГРУППА
HAVING AVG(EXTRACT (YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) >
        (SELECT MIN(EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) AS ВОЗРАСТ
                                FROM Н_ЛЮДИ
                                JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
                                WHERE Н_УЧЕНИКИ.ГРУППА = '1100')
ORDER BY СРЕДНИЙ_ВОЗРАСТ DESC
;

-- SELECT MIN(EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) AS ВОЗРАСТ
-- FROM Н_ЛЮДИ
-- JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
-- WHERE Н_УЧЕНИКИ.ГРУППА = '1100';

/*
    6.Получить список студентов, отчисленных после первого сентября 2012 года с заочной формы обучения. В результат включить:
    номер группы;
    номер, фамилию, имя и отчество студента;
    номер пункта приказа;
    Для реализации использовать подзапрос с IN.
*/
SELECT Н_УЧЕНИКИ.ГРУППА, CONCAT(Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО) AS ФИО 
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ  IN ('Заочная') AND  Н_УЧЕНИКИ.СОСТОЯНИЕ  IN ('отменен')
;
/*    
    7.Вывести список студентов, имеющих одинаковые фамилии, но не совпадающие даты рождения.
*/
SELECT CONCAT(Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО) AS ФИО
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н.УЧЕНИКИ.ЧЛВК_ИД
WHERE (Н_ЛЮДИ.ФАМИЛИЯ = Н_ЛЮДИ.ФАМИЛИЯ AND EXTRACT(YEAR FROM Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)<> )
